<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.myCode.pradnya.server</groupId>
	<artifactId>openapi-swagger-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>OpenAPI Server</name>
	<description>OpenAPI Server</description>
	<modules>
		<module>swagger-server</module>
	</modules>

	<properties>

		<maven.java.version>11</maven.java.version>
		<maven.file.encoding>UTF-8</maven.file.encoding>
		<maven.version>[3.0.0, 3.6.3]</maven.version>
		<project.build.sourceEncoding>${maven.file.encoding}</project.build.sourceEncoding>
		<project.build.resourceEncoding>${maven.file.encoding}</project.build.resourceEncoding>
		<project.reporting.outputEncoding>${maven.file.encoding}</project.reporting.outputEncoding>
		<java.version>${maven.java.version}</java.version>
		<maven.compiler.source>${maven.java.version}</maven.compiler.source>
		<maven.compiler.target>${maven.java.version}</maven.compiler.target>
		<maven.compiler.testSource>${maven.java.version}</maven.compiler.testSource>
		<maven.compiler.testTarget>${maven.java.version}</maven.compiler.testTarget>

		<artifact.wagon.version>2.0.10</artifact.wagon.version>

		<slf4j.api.version>1.7.36</slf4j.api.version>

		<swagger.annotations.version>2.2.0</swagger.annotations.version>
		<swagger.models.version>2.2.0</swagger.models.version>

		<javax.validation.version>2.0.1.Final</javax.validation.version>
		<javax.annotations.version>1.3.2</javax.annotations.version>
		<javax.servlet.version>3.1.0</javax.servlet.version>

		<springframework.version>5.3.24</springframework.version>

		<jackson.annotations.version>2.13.4</jackson.annotations.version>
		<jackson.core.version>2.13.4</jackson.core.version>
		<jackson.databind.version>2.13.4.2</jackson.databind.version>
		<jackson.datatype.jdk8.version>2.13.4</jackson.datatype.jdk8.version>
		<jackson.datatype.jsr310.version>2.13.4</jackson.datatype.jsr310.version>
		<jackson.module.parameter.names.version>2.13.4</jackson.module.parameter.names.version>

		<junit.platform.console.version>1.8.2</junit.platform.console.version>
		<junit.platform.engine.version>1.8.2</junit.platform.engine.version>
		<junit.platform.suite.version>1.8.2</junit.platform.suite.version>

		<junit.jupiter.api.version>5.8.2</junit.jupiter.api.version>
		<junit.jupiter.engine.version>5.8.2</junit.jupiter.engine.version>

		<hamcrest.version>2.2</hamcrest.version>
		<mockito.version>4.0.0</mockito.version>
		<h2.version>2.0.202</h2.version>

		<maven.help.plugin.version>3.2.0</maven.help.plugin.version>
		<maven.clean.plugin.version>3.2.0</maven.clean.plugin.version>
		<maven.dependency.plugin.version>3.3.0</maven.dependency.plugin.version>
		<maven.source.plugin.version>3.2.1</maven.source.plugin.version>
		<maven.resources.plugin.version>3.2.0</maven.resources.plugin.version>
		<maven.compiler.plugin.version>3.10.1</maven.compiler.plugin.version>
		<maven.jar.plugin.version>3.2.2</maven.jar.plugin.version>
		<maven.antrun.plugin.version>3.0.0</maven.antrun.plugin.version>
		<maven.assembly.plugin.version>3.3.0</maven.assembly.plugin.version>
		<maven.shade.plugin.version>3.3.0</maven.shade.plugin.version>
		<maven.install.plugin.version>3.0.0-M1</maven.install.plugin.version>
		<maven.site.plugin.version>3.11.0</maven.site.plugin.version>
		<maven.deploy.plugin.version>3.0.0-M2</maven.deploy.plugin.version>
		<maven.release.plugin.version>3.0.0-M5</maven.release.plugin.version>

		<exec.maven.plugin.version>3.0.0</exec.maven.plugin.version>

		<swagger.codegen.maven.plugin.version>3.0.34</swagger.codegen.maven.plugin.version>

		<swagger.codegen.config.language>spring</swagger.codegen.config.language>
		<swagger.codegen.config.library>spring-boot</swagger.codegen.config.library>
		<swagger.codegen.config.interfaceOnly>true</swagger.codegen.config.interfaceOnly>
		<swagger.codegen.config.useOneOfInterfaces>false</swagger.codegen.config.useOneOfInterfaces>
		<swagger.codegen.config.dateLibrary>java8</swagger.codegen.config.dateLibrary>

	</properties>

	<dependencies>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.api.version}</version>
		</dependency>

		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger.annotations.version}</version>
		</dependency>

		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-models</artifactId>
			<version>${swagger.models.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>${javax.validation.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>javax.annotation-api</artifactId>
			<version>${javax.annotations.version}</version>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>${javax.servlet.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>${jackson.annotations.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.core.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.databind.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>${jackson.datatype.jdk8.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>${jackson.datatype.jsr310.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
			<version>${jackson.module.parameter.names.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jcl</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${springframework.version}</version>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-console</artifactId>
			<version>${junit.platform.console.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-engine</artifactId>
			<version>${junit.platform.engine.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite</artifactId>
			<version>${junit.platform.suite.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.jupiter.api.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.engine.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-core</artifactId>
			<version>${hamcrest.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-help-plugin</artifactId>
					<version>${maven.help.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven.clean.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven.dependency.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven.source.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven.resources.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven.compiler.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven.jar.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven.antrun.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven.assembly.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven.shade.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven.install.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven.deploy.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven.site.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven.release.plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec.maven.plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>${maven.dependency.plugin.version}</version>
				<executions>
					<execution>
						<id>make-dependency</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>${maven.java.version}</source>
					<target>${maven.java.version}</target>
					<compilerVersion>${maven.java.version}</compilerVersion>
					<encoding>${maven.file.encoding}</encoding>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<compilerArgs>
						<arg>-Xlint</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${maven.jar.plugin.version}</version>
				<executions>
					<execution>
						<id>default-test-jar</id>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifestEntries>
							<Specification-Title>${project.name}</Specification-Title>
							<Specification-Version>${project.version}</Specification-Version>
							<Specification-Vendor>${project.organization.name}</Specification-Vendor>
							<Implementation-Title>${project.name}</Implementation-Title>
							<Implementation-Version>${project.version}</Implementation-Version>
							<Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
							<X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
							<X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>${project.basedir}</directory>
				<targetPath>META-INF</targetPath>
			</resource>
			<resource>
				<directory>${project.basedir}/swagger-server/src/main/resources</directory>
			</resource>
		</resources>
	</build>

	<profiles>
		<profile>
			<!-- mvn -P enforcer validate -->
			<id>enforcer</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<maven.enforcer.plugin.version>3.0.0</maven.enforcer.plugin.version>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-enforcer-plugin</artifactId>
							<version>${maven.enforcer.plugin.version}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<executions>
							<execution>
								<id>default-enforcer</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireMavenVersion>
											<version>${maven.version}</version>
										</requireMavenVersion>
										<dependencyConvergence/>
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- mvn -P javadoc install -->
			<id>javadoc</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<maven.javadoc.plugin.version>3.3.2</maven.javadoc.plugin.version>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>${maven.javadoc.plugin.version}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>make-javadoc</id>
								<goals>
									<goal>jar</goal>
								</goals>
								<configuration>
									<source>${maven.compiler.source}</source>
									<encoding>${maven.file.encoding}</encoding>
									<docencoding>${maven.file.encoding}</docencoding>
									<doclint>none</doclint>
									<show>private</show>
									<nohelp>true</nohelp>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jacoco</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<maven.project.info.reports.plugin.version>3.2.2</maven.project.info.reports.plugin.version>
				<maven.surefire.plugin.version>3.0.0-M6</maven.surefire.plugin.version>
				<maven.failsafe.plugin.version>3.0.0-M6</maven.failsafe.plugin.version>
				<jacoco.maven.plugin.version>0.8.8</jacoco.maven.plugin.version>
				<surefire.printSummary>true</surefire.printSummary>
				<failsafe.printSummary>true</failsafe.printSummary>
				<org.jacoco.maven.plugin.classRatio>0.0</org.jacoco.maven.plugin.classRatio>
				<org.jacoco.maven.plugin.instructionRatio>0.0</org.jacoco.maven.plugin.instructionRatio>
				<org.jacoco.maven.plugin.methodRatio>0.0</org.jacoco.maven.plugin.methodRatio>
				<org.jacoco.maven.plugin.branchRatio>0.0</org.jacoco.maven.plugin.branchRatio>
				<org.jacoco.maven.plugin.lineRatio>0.0</org.jacoco.maven.plugin.lineRatio>
				<org.jacoco.maven.plugin.complexityRatio>0.0</org.jacoco.maven.plugin.complexityRatio>
				<surefireArgLine></surefireArgLine>
				<failsafeArgLine></failsafeArgLine>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>${maven.project.info.reports.plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${maven.surefire.plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-failsafe-plugin</artifactId>
							<version>${maven.failsafe.plugin.version}</version>
						</plugin>
						<plugin>
							<groupId>org.jacoco</groupId>
							<artifactId>jacoco-maven-plugin</artifactId>
							<version>${jacoco.maven.plugin.version}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-project-info-reports-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<argLine>@{surefireArgLine} -Xms2g -Xmx2g -Dfile.encoding=UTF-8</argLine>
						</configuration>
						<executions>
							<execution>
								<id>default-test</id>
								<goals>
									<goal>test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<argLine>@{failsafeArgLine} -Xms2g -Xmx2g -Dfile.encoding=UTF-8</argLine>
						</configuration>
						<executions>
							<execution>
								<id>default-integration-test</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<executions>
							<!-- Prepares the property pointing to the JaCoCo runtime agent which is passed as VM argument when the maven surefire plugin is executed. -->
							<execution>
								<id>default-prepare-agent</id>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<!-- Sets the path to the file which contains the execution data. -->
									<destFile>${project.build.directory}/jacoco.exec</destFile>
									<!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
									<propertyName>surefireArgLine</propertyName>
									<append>true</append>
								</configuration>
							</execution>
							<!-- Ensures that the code coverage report for unit tests is created after unit tests have been run. -->
							<execution>
								<id>default-report</id>
								<goals>
									<goal>report</goal>
								</goals>
								<configuration>
									<!-- Sets the path to the file which contains the execution data. -->
									<dataFile>${project.build.directory}/jacoco.exec</dataFile>
									<!-- Sets the output directory for the code coverage report. -->
									<outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
								</configuration>
							</execution>
							<!-- Prepares the property pointing to the JaCoCo runtime agent which is passed as VM argument when the maven failsafe plugin is executed. -->
							<execution>
								<id>default-prepare-agent-integration</id>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
								<configuration>
									<!-- Sets the path to the file which contains the execution data. -->
									<destFile>${project.build.directory}/jacoco-it.exec</destFile>
									<!-- Sets the name of the property containing the settings for JaCoCo runtime agent. -->
									<propertyName>failsafeArgLine</propertyName>
									<append>true</append>
								</configuration>
							</execution>
							<!-- Ensures that the code coverage report for integration tests after integration tests have been run. -->
							<execution>
								<id>default-report-integration</id>
								<goals>
									<goal>report-integration</goal>
								</goals>
								<configuration>
									<!-- Sets the path to the file which contains the execution data. -->
									<dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
									<!-- Sets the output directory for the code coverage report. -->
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>default-report-aggregate</id>
								<phase>verify</phase>
								<goals>
									<goal>report-aggregate</goal>
								</goals>
								<configuration>
									<!-- Sets the path to the files which contains the execution data. -->
									<dataFileIncludes>${project.build.directory}/jacoco.exec,${project.build.directory}/jacoco-it.exec</dataFileIncludes>
									<!-- Sets the output directory for the code coverage aggregate report. -->
									<outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>default-check</id>
								<phase>test</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<dataFile>${project.build.directory}/jacoco.exec</dataFile>
									<rules>
										<rule>
											<element>BUNDLE</element>
											<limits>
												<limit>
													<counter>CLASS</counter>
													<value>COVEREDRATIO</value>
													<minimum>${org.jacoco.maven.plugin.classRatio}</minimum>
												</limit>
												<limit>
													<counter>INSTRUCTION</counter>
													<value>COVEREDRATIO</value>
													<minimum>${org.jacoco.maven.plugin.instructionRatio}</minimum>
												</limit>
												<limit>
													<counter>METHOD</counter>
													<value>COVEREDRATIO</value>
													<minimum>${org.jacoco.maven.plugin.methodRatio}</minimum>
												</limit>
												<limit>
													<counter>BRANCH</counter>
													<value>COVEREDRATIO</value>
													<minimum>${org.jacoco.maven.plugin.branchRatio}</minimum>
												</limit>
												<limit>
													<counter>LINE</counter>
													<value>COVEREDRATIO</value>
													<minimum>${org.jacoco.maven.plugin.lineRatio}</minimum>
												</limit>
												<limit>
													<counter>COMPLEXITY</counter>
													<value>COVEREDRATIO</value>
													<minimum>${org.jacoco.maven.plugin.complexityRatio}</minimum>
												</limit>
											</limits>
										</rule>
									</rules>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sonar</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<sonar.skip>false</sonar.skip>
				<sonar.maven.plugin.version>3.7.0.1746</sonar.maven.plugin.version>
				<sonar.language>java</sonar.language>
				<sonar.sources>${project.basedir}/src/main</sonar.sources>
				<sonar.tests>${project.basedir}/src/test</sonar.tests>
				<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
				<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
				<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
				<sonar.junit.reportPaths>${project.build.directory}/surefire-reports</sonar.junit.reportPaths>
				<sonar.coverage.jacoco.xmlReportPaths>${project.reporting.outputDirectory}/jacoco/jacoco.xml,${project.reporting.outputDirectory}/jacoco-it/jacoco.xml,${project.reporting.outputDirectory}/jacoco-aggregate/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.sonarsource.scanner.maven</groupId>
							<artifactId>sonar-maven-plugin</artifactId>
							<version>${sonar.maven.plugin.version}</version>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
